; author: ryang
;
[files]
global_var	= "model_data"
scooter_data 	= "e_scooter_250_lousiville.pkl"
model_file 	= "e_scooter_250_lousiville.pt"
grid_dict  	= "grid_dict_250.csv"
file_path 	= "lousiville-escooter-2018-2019.csv"
eval_file 	= "e_scooter_lousiville_output.pkl"

[train]
batch_size  = 5
epochs 	    = 115
windowsize  = 74

[general]
data_format = "%%Y-%%m-%%dT%%H:%%M"
city 	    = "Lousiville_LSTM"

[model]
# Grid size the input grid will be transformed into 
grid_size	= [2, 74 , 40]

# Hidden layer of the LSTM
hidden_size   	= 550

# Number of layers of the LSTM
num_layers    	= 2

# Number of future outputs that the LSTM will predict
future_size   	= 200

# Input size of the LSTM (number of latent features created by the encoder)
input_size    	= 1377

# number in input channels for convolution network
in_channels   	= 2

# number of channes in first convolution channls
channel1      	= 18

# padding for encoder
enc_padding   	= 0

# number of channels at seconds convution layer
enc_channels  	= 9

# Kernal size for encoder
enc_kernels   	= 2

# Kernal size for decoder
dec_kernels   	= 3

# pool kernaels
pool_kernels  	= 2

# pool stride
pool_stride   	= 2

# learning rate
learning_rate 	= 0.0001

# padding for decoder
output_padding1 = 1

# padding for decoder second layer
output_padding2 = 1

# unflatten dimentions for decoder
unflatten_dim   = [9, 17, 9]

# Type of RNN network use LSTM, GRU, RNN
rnn_type        = "LSTM"
